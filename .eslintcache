[{"C:\\projetos\\netflixclone\\src\\App.js":"1","C:\\projetos\\netflixclone\\src\\index.js":"2","C:\\projetos\\netflixclone\\src\\Tmdb.js":"3","C:\\projetos\\netflixclone\\src\\components\\MovieRows.js":"4","C:\\projetos\\netflixclone\\src\\components\\FeaturedMovie.js":"5","C:\\projetos\\netflixclone\\src\\components\\Header.js":"6"},{"size":1812,"mtime":1610566213912,"results":"7","hashOfConfig":"8"},{"size":198,"mtime":1610491312675,"results":"9","hashOfConfig":"8"},{"size":2612,"mtime":1610499402412,"results":"10","hashOfConfig":"8"},{"size":1860,"mtime":1610566367364,"results":"11","hashOfConfig":"8"},{"size":1660,"mtime":1610552432496,"results":"12","hashOfConfig":"8"},{"size":633,"mtime":1610506660511,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"12j7nov",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\projetos\\netflixclone\\src\\App.js",["28"],"C:\\projetos\\netflixclone\\src\\index.js",[],"C:\\projetos\\netflixclone\\src\\Tmdb.js",["29"],"const API_KEY ='432016ac315ce490b022e5390ac595cf';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\n\r\nconst basicFetch = async (endpoint)=>{\r\n    const req = await fetch(`${API_BASE}${endpoint}`);\r\n    const json = await req.json();\r\n    return json;\r\n}\r\n\r\nexport default {\r\n\r\n    getHomeList: async()=>{\r\n        return [\r\n            {\r\n                slug: 'originals',\r\n                title: 'Originais do Netflix',\r\n                items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'trending',\r\n                title: 'Recomendados para Você',\r\n                items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n\r\n            },\r\n            {\r\n                slug: 'toprated',\r\n                title: 'Em Alta',\r\n                items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n\r\n            },\r\n            {\r\n                slug: 'action',\r\n                title: 'Ação',\r\n                items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n\r\n            },\r\n            {\r\n                slug: 'comedy',\r\n                title: 'Comedia',\r\n                items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n\r\n            },\r\n            {\r\n                slug: 'horror',\r\n                title: 'Terror',\r\n                items:await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n\r\n            },\r\n            {\r\n                slug: 'romance',\r\n                title: 'Romance',\r\n                items:await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n\r\n            },\r\n            {\r\n                slug: 'documentary',\r\n                title: 'Documentário',\r\n                items:await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n\r\n            },\r\n        ]\r\n    },\r\n\r\n    getMovieInfo: async(movieId, type) =>{\r\n        let info = {};\r\n\r\n        if(movieId) {\r\n            switch(type){\r\n                case 'movie':\r\n                    info =await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`)\r\n                break;\r\n                case 'tv':\r\n                    info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`)\r\n                break\r\n                default:\r\n                    info =null;\r\n                break\r\n            }\r\n\r\n        }\r\n        return info;\r\n    }\r\n\r\n\r\n}","C:\\projetos\\netflixclone\\src\\components\\MovieRows.js",["30"],"C:\\projetos\\netflixclone\\src\\components\\FeaturedMovie.js",["31"],"import React from 'react';\r\n\r\nimport './FeaturedMovie.css';\r\n\r\nexport default ({item}) =>{\r\n\r\n    let firstDate = new Date(item.first_air_date);\r\n\r\n    let genres = [];\r\n\r\n    for(let i in item.genres){\r\n        genres.push(item.genres[i].name)\r\n    }\r\n\r\n    return(\r\n        <section className=\"featured\" style={{\r\n            backgroundSize:'cover',\r\n            backgroundPosition: 'center',\r\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n        }}>\r\n            <div className=\"featured--vertical\">\r\n                <div className=\"featured--horizontal\">\r\n                    <div className=\"featured--name\">{item.original_name}</div>\r\n                    <div className=\"featured--info\">\r\n                        <div className=\"featured--points\">{item.vote_average} pontos</div>\r\n                        <div className=\"featured--year\">{firstDate.getFullYear()}</div>\r\n                        <div className=\"featured--seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !==1? 's':''}</div>\r\n\r\n                    </div>\r\n                    <div className=\"featured--description\">{item.overview}</div>\r\n                    <div className=\"featured--buttons\">\r\n                        <a href={`/watch/${item.id}`} className=\"featured--watchbutton\">▶ Assistir</a>\r\n                        <a href={`/list/add/${item.id}`} className=\"featured--mylistbutton\">+ Minha Lista</a>\r\n                    </div>\r\n                    <div className=\"featured--genres\"><strong>Gêneros</strong> {genres.join(', ')}</div>\r\n\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}","C:\\projetos\\netflixclone\\src\\components\\Header.js",["32","33","34","35","36"],{"ruleId":"37","severity":1,"message":"38","line":10,"column":1,"nodeType":"39","endLine":69,"endColumn":2},{"ruleId":"37","severity":1,"message":"40","line":11,"column":1,"nodeType":"39","endLine":86,"endColumn":2},{"ruleId":"37","severity":1,"message":"38","line":7,"column":1,"nodeType":"39","endLine":60,"endColumn":2},{"ruleId":"37","severity":1,"message":"38","line":5,"column":1,"nodeType":"39","endLine":42,"endColumn":2},{"ruleId":"37","severity":1,"message":"38","line":5,"column":1,"nodeType":"39","endLine":20,"endColumn":2},{"ruleId":"41","severity":1,"message":"42","line":9,"column":17,"nodeType":"43","endLine":9,"endColumn":28},{"ruleId":"44","severity":1,"message":"45","line":10,"column":21,"nodeType":"43","endLine":10,"endColumn":106},{"ruleId":"41","severity":1,"message":"42","line":14,"column":17,"nodeType":"43","endLine":14,"endColumn":28},{"ruleId":"44","severity":1,"message":"45","line":15,"column":21,"nodeType":"43","endLine":15,"endColumn":121},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]